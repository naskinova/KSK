# streamlit_app/auth/login_form.py
import pandas as pd
import streamlit as st
import sys
from pathlib import Path

# Add the root project directory to the system path
sys.path.append(str(Path(__file__).resolve().parent.parent))

from auth.api import login_user
from examiner.api import fetch_assigned_students, fetch_existing_grades


def render_login_form():
    st.subheader("üîê –í—Ö–æ–¥ –∑–∞ –ø—Ä–æ–≤–µ—Ä—è–≤–∞—â–∏ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∏")

    email = st.text_input("–ò–º–µ–π–ª")
    password = st.text_input("–ü–∞—Ä–æ–ª–∞", type="password")

    if st.button("–í—Ö–æ–¥"):
        # üß† –ò–∑–≤–∏–∫–≤–∞–Ω–µ –Ω–∞ –±–µ–∫–µ–Ω–¥–∞
        response = login_user(email, password)

        if response:
            # ‚úÖ –ó–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–∏—Ç–µ –¥–∞–Ω–Ω–∏
            user = response["user"]
            access_token = response["access_token"]
            st.session_state.user = user
            st.session_state.user["access_token"] = access_token

            # ‚úÖ Debug print
            st.info("üë§ –î–∞–Ω–Ω–∏ –∑–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è:")
            st.json(user)  # –ü–æ–∫–∞–∂–∏ —Ü–µ–ª–∏—è –æ–±–µ–∫—Ç

            st.success(f"–î–æ–±—Ä–µ –¥–æ—à—ä–ª, {user['name']}! ({user['role']})")
            st.write("üîê –¢–æ–∫–µ–Ω:")
            st.code(user["access_token"], language="bash")

            # üéì –°–∞–º–æ –∑–∞ –ø—Ä–æ–≤–µ—Ä—è–≤–∞—â–∏
            if user["role"] == "examiner":
                st.info("üîÑ –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Å—Ç—É–¥–µ–Ω—Ç–∏—Ç–µ –∏ –≤—ä–≤–µ–¥–µ–Ω–∏—Ç–µ –æ—Ü–µ–Ω–∫–∏...")

                assigned = fetch_assigned_students()
                st.session_state.assigned_students = assigned or []

                grades = fetch_existing_grades()
                if grades and isinstance(grades, list) and len(grades) > 0:
                    df = pd.DataFrame(grades)
                    st.session_state.grades_df = df
                    st.success(f"‚úÖ –ó–∞—Ä–µ–¥–µ–Ω–∏ –æ—Ü–µ–Ω–∫–∏ –∑–∞ {len(df)} —Å—Ç—É–¥–µ–Ω—Ç–∞.")
                else:
                    st.session_state.grades_df = pd.DataFrame()
                    st.info("‚ÑπÔ∏è –ù—è–º–∞ –≤—ä–≤–µ–¥–µ–Ω–∏ –æ—Ü–µ–Ω–∫–∏ –¥–æ –º–æ–º–µ–Ω—Ç–∞.")
            else:
                # –ó–∞ –¥—Ä—É–≥–∏ —Ä–æ–ª–∏
                st.session_state.assigned_students = []
                st.session_state.grades_df = pd.DataFrame()

            st.success("‚úÖ –£—Å–ø–µ—à–µ–Ω –≤—Ö–æ–¥!")
            st.rerun()
        else:
            st.error("‚ùå –ù–µ–≤–∞–ª–∏–¥–µ–Ω –∏–º–µ–π–ª –∏–ª–∏ –ø–∞—Ä–æ–ª–∞.")
